{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/Marketplace/Marketplace%20Code/src/lib/apollo-client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink, from } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { onError } from '@apollo/client/link/error';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:4000/graphql' // Local backend for dev\r\n    : 'https://coffee-sys-api.vercel.app/graphql', // Deployed backend for production\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.forEach(({ message, locations, path }) => {\r\n      console.error(\r\n        `GraphQL error: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n      );\r\n    });\r\n  }\r\n\r\n  if (networkError) {\r\n    console.error(`Network error: ${networkError}`);\r\n    if ('statusCode' in networkError && networkError.statusCode === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: from([errorLink, authLink, httpLink]),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      errorPolicy: 'all',\r\n    },\r\n    query: {\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAEA,MAAM,WAAW,CAAA,GAAA,oKAAA,CAAA,iBAAc,AAAD,EAAE;IAC9B,KAAK,uCACD,gCAAgC,wBAAwB;;AAE9D;AAEA,MAAM,WAAW,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE;IACzC,MAAM,QAAQ,6EAAgE;IAE9E,OAAO;QACL,SAAS;YACP,GAAG,OAAO;YACV,eAAe,6EAA4B;QAC7C;IACF;AACF;AAEA,MAAM,YAAY,CAAA,GAAA,4JAAA,CAAA,UAAO,AAAD,EAAE,CAAC,EAAE,aAAa,EAAE,YAAY,EAAE;IACxD,IAAI,eAAe;QACjB,cAAc,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE;YACjD,QAAQ,KAAK,CACX,CAAC,wBAAwB,EAAE,QAAQ,YAAY,EAAE,UAAU,QAAQ,EAAE,MAAM;QAE/E;IACF;IAEA,IAAI,cAAc;QAChB,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,cAAc;QAC9C,IAAI,gBAAgB,gBAAgB,aAAa,UAAU,KAAK,KAAK;YACnE,aAAa,UAAU,CAAC;YACxB,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;QACzB;IACF;AACF;AAEA,MAAM,SAAS,IAAI,0KAAA,CAAA,eAAY,CAAC;IAC9B,MAAM,CAAA,GAAA,0JAAA,CAAA,OAAI,AAAD,EAAE;QAAC;QAAW;QAAU;KAAS;IAC1C,OAAO,IAAI,wKAAA,CAAA,gBAAa;IACxB,gBAAgB;QACd,YAAY;YACV,aAAa;QACf;QACA,OAAO;YACL,aAAa;QACf;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/Marketplace/Marketplace%20Code/src/app/apollo-provider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ApolloProvider as Provider } from '@apollo/client';\r\nimport client from '@/lib/apollo-client';\r\n\r\nexport function ApolloProvider({ children }: { children: React.ReactNode }) {\r\n  return <Provider client={client}>{children}</Provider>;\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,eAAe,EAAE,QAAQ,EAAiC;IACxE,qBAAO,8OAAC,wKAAA,CAAA,iBAAQ;QAAC,QAAQ,8HAAA,CAAA,UAAM;kBAAG;;;;;;AACpC","debugId":null}}]
}