{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/Marketplace/Marketplace%20Code/src/app/graphql/loginMutation.tsx"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst LOGIN_MUTATION=gql`\r\nmutation Login($args: LoginArgs) {\r\n  Login(args: $args) {\r\n    status\r\n    message\r\n    token\r\n    user {\r\n      id\r\n      Fname\r\n      Mname\r\n      Lname\r\n      photo\r\n      email\r\n      role\r\n      password\r\n      warehouse {\r\n        id\r\n        capacity\r\n        email\r\n        address\r\n        location\r\n        managerId\r\n        name\r\n        phone\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\nexport default LOGIN_MUTATION"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAe,iJAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BzB,CAAC;uCACc","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Downloads/Marketplace/Marketplace%20Code/src/app/login/page.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useMutation } from '@apollo/client';\r\nimport LOGIN_MUTATION from '../graphql/loginMutation';\r\nimport { toast } from 'react-toastify';\r\nimport { GoogleLogin, CredentialResponse } from \"@react-oauth/google\";\r\nimport { jwtDecode, JwtPayload } from \"jwt-decode\";\r\nimport { LoginFormData } from '@/types/LoginFormDataTypes';\r\nimport { LoginResponse } from '@/types/LoginResponse';\r\nimport Link from 'next/link';\r\nimport { User } from '@/types/UserTypes';\r\n\r\nexport interface GoogleJwtPayload extends JwtPayload {\r\n  email?: string;\r\n  given_name?: string;\r\n  family_name?: string;\r\n  picture?: string;\r\n}\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter();\r\n  const [form, setForm] = useState<LoginFormData>({ email: '', password: '' });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [login, { loading, error }] = useMutation<LoginResponse>(LOGIN_MUTATION);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    await handleLogin();\r\n  };\r\n\r\n  const navigateBasedOnRole = (user: User) => {\r\n    if (user.role === \"ADMINISTRATOR\") {\r\n      router.push(\"/dashboards/admin\");\r\n    } else if (user.role === \"WAREHOUSE_GUY\") {\r\n      router.push(\"/dashboards/warehouse\");\r\n    } else if (user.role === \"BUYER\") {\r\n      router.push(\"/dashboards/buyer\");\r\n    } else {\r\n      router.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!form.email || !form.password) {\r\n      toast.error('Please fill in all fields');\r\n      return;\r\n    }\r\n  \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      const { data } = await login({\r\n        variables: {\r\n          args: {\r\n            email: form.email.trim(),\r\n            password: form.password,\r\n          }\r\n        }\r\n      });\r\n  \r\n      console.log(\"Login response:\", data);\r\n  \r\n      if (data?.Login?.status === \"Success\" && data?.Login?.token) {\r\n        localStorage.setItem('token', data.Login.token);\r\n        \r\n        if (data.Login.user) {\r\n          localStorage.setItem('user', JSON.stringify(data.Login.user));\r\n          toast.success(data.Login.message || 'Login successful!');\r\n          navigateBasedOnRole(data.Login.user);\r\n        } else {\r\n          router.push('/dashboard');\r\n        }\r\n      } else {\r\n        throw new Error(data?.Login?.message || 'Login failed: Invalid response from server.');\r\n      }\r\n    } catch (err: any) {\r\n      console.error('Login error:', err);\r\n      \r\n      if (err.message) {\r\n        toast.error(err.message);\r\n      } else {\r\n        toast.error('An error occurred during login');\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleLogin = async (credentialResponse: CredentialResponse) => {\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      if (credentialResponse.credential) {\r\n        const decodedToken = jwtDecode<GoogleJwtPayload>(credentialResponse.credential);\r\n        const googleEmail = decodedToken.email;\r\n\r\n        if (!googleEmail) {\r\n          toast.error(\"Google login failed: No email found\");\r\n          return;\r\n        }\r\n\r\n        const { data } = await login({\r\n          variables: { \r\n            args: {\r\n              email: googleEmail, \r\n              password: \"\" \r\n            }\r\n          },\r\n        });\r\n\r\n        if (data?.Login?.status === \"Success\" && data?.Login?.token) {\r\n          localStorage.setItem('token', data.Login.token);\r\n          \r\n          if (data.Login.user) {\r\n            localStorage.setItem('user', JSON.stringify(data.Login.user));\r\n          }\r\n          \r\n          toast.success(data.Login.message || \"Welcome back!\");\r\n          \r\n          // Navigate based on role\r\n          if (data.Login.user) {\r\n            navigateBasedOnRole(data.Login.user);\r\n          } else {\r\n            router.push(\"/dashboard\");\r\n          }\r\n        } else {\r\n          throw new Error(data?.Login?.message || \"Google login failed\");\r\n        }\r\n      } else {\r\n        toast.error(\"Google login failed: No credential received\");\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Google Login Error:\", error);\r\n      \r\n      if (error.message.includes(\"Google Sign-In\")) {\r\n        toast.error(\"This account is linked to Google. Please use Google sign-in.\");\r\n      } else if (error.message.includes(\"No account found\")) {\r\n        toast.error(\"No account found. Please sign up first.\");\r\n      } else {\r\n        toast.error(error.message || \"Google login failed\");\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const isLoading = loading || isSubmitting;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-[#476869] p-4\">\r\n      <div className=\"w-full max-w-md bg-white rounded-2xl shadow-xl p-8 space-y-6 animate-fade-in\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"text-3xl font-bold text-[#205D5A]\">Welcome Back</h2>\r\n          <p className=\"text-gray-600 mt-2\">Log in to continue to the Marketplace.</p>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"p-3 bg-red-100 border border-red-400 text-red-700 rounded-xl text-center\">\r\n            {error.message}\r\n          </div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              value={form.email}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n              className=\"w-full p-3 border-2 rounded-xl border-[#00A79D] bg-white text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-[#00A79D] transition disabled:bg-gray-100 disabled:cursor-not-allowed\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <input\r\n              name=\"password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              placeholder=\"Password\"\r\n              value={form.password}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n              className=\"w-full p-3 border-2 rounded-xl border-[#00A79D] bg-white text-black placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-[#00A79D] transition disabled:bg-gray-100 disabled:cursor-not-allowed pr-16\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={togglePasswordVisibility}\r\n              disabled={isLoading}\r\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 text-sm font-medium text-[#00A79D] hover:text-[#205D5A] transition disabled:text-gray-400\"\r\n            >\r\n              {showPassword ? 'Hide' : 'Show'}\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-[#00A79D] text-white py-3 rounded-xl hover:bg-[#205D5A] transition duration-300 font-semibold disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n          >\r\n            {isLoading ? 'Logging in...' : 'Log In'}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"flex justify-center\">\r\n          <GoogleLogin\r\n            size=\"large\"\r\n            shape=\"rectangular\"\r\n            theme=\"outline\"\r\n            onSuccess={handleGoogleLogin}\r\n            onError={() => {\r\n              toast.error(\"Google login failed\");\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex justify-between text-sm text-gray-600 font-medium\">\r\n          <Link\r\n            href=\"/reset-password\" \r\n            className=\"text-[#BD011F] hover:underline transition\"\r\n          >\r\n            Forgot password?\r\n          </Link>\r\n          <Link\r\n            href=\"/\" \r\n            className=\"text-[#205D5A] hover:underline transition\"\r\n          >\r\n            Create an account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}